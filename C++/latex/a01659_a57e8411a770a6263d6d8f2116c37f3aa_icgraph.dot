digraph "nlohmann::basic_json::is_object"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="RL";
  Node1 [label="nlohmann::basic_json\l::is_object",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="return whether value is an object"];
  Node1 -> Node2 [dir="back",color="steelblue1",style="solid"];
  Node2 [label="nlohmann::basic_json::at",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$a01659.html#a239e942da82f2597d0cf5ec806f5bc0d",tooltip="access specified object element with bounds checking"];
  Node1 -> Node3 [dir="back",color="steelblue1",style="solid"];
  Node3 [label="nlohmann::basic_json\l::contains",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$a01659.html#a02c9bc4d0f33b7dec20b2798301d6971",tooltip="check the existence of an element in a JSON object"];
  Node1 -> Node4 [dir="back",color="steelblue1",style="solid"];
  Node4 [label="nlohmann::basic_json\l::count",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$a01659.html#aba5ec6d1e37eda6b11eba491a1e5237e",tooltip="returns the number of occurrences of a key in a JSON object"];
  Node1 -> Node5 [dir="back",color="steelblue1",style="solid"];
  Node5 [label="nlohmann::basic_json\l::json_value::destroy",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$a02059.html#a34d4ecf420c2752268b9b24829cdd393",tooltip=" "];
  Node5 -> Node6 [dir="back",color="steelblue1",style="solid"];
  Node6 [label="nlohmann::basic_json\l::~basic_json",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$a01659.html#a60b643c02a19fa52f99db8215ff58e0f",tooltip="destructor"];
  Node5 -> Node5 [dir="back",color="steelblue1",style="solid"];
  Node1 -> Node7 [dir="back",color="steelblue1",style="solid"];
  Node7 [label="nlohmann::basic_json\l::emplace",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$a01659.html#af244c096197a233edba4c83200ae66ac",tooltip="add an object to an object if key does not exist"];
  Node1 -> Node8 [dir="back",color="steelblue1",style="solid"];
  Node8 [label="nlohmann::basic_json\l::erase",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$a01659.html#af72b1c9d1502b02a49a0cb9db9f980ea",tooltip="remove element from a JSON object given a key"];
  Node1 -> Node9 [dir="back",color="steelblue1",style="solid"];
  Node9 [label="nlohmann::basic_json\l::find",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$a01659.html#acdf9b3aab82dcf443dd91ca5ec06b80c",tooltip="find an element in a JSON object"];
  Node9 -> Node10 [dir="back",color="steelblue1",style="solid"];
  Node10 [label="nlohmann::basic_json\l::diff",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$a01659.html#a1c1f21327df91a4dd6c5f5a107240385",tooltip="creates a diff as a JSON patch"];
  Node10 -> Node10 [dir="back",color="steelblue1",style="solid"];
  Node9 -> Node11 [dir="back",color="steelblue1",style="solid"];
  Node11 [label="nlohmann::basic_json\l::patch",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$a01659.html#adcc786998f220a5b3083ee8a37c4553e",tooltip="applies a JSON patch"];
  Node9 -> Node12 [dir="back",color="steelblue1",style="solid"];
  Node12 [label="nlohmann::basic_json\l::value",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$a01659.html#a11641b35219676b225d9bd15c7677659",tooltip="access specified object element with default value"];
  Node12 -> Node13 [dir="back",color="steelblue1",style="solid"];
  Node13 [label="nlohmann::basic_json\l::json_value::json_value",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$a02059.html#ad7f122fa9bfc5aa4d9b65a3059892146",tooltip="constructor for strings"];
  Node12 -> Node14 [dir="back",color="steelblue1",style="solid"];
  Node14 [label="nlohmann::basic_json\l::value",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$a01659.html#adcfdefe95d5c2471a5c97e911d46ee88",tooltip="overload for a default value of type const char*"];
  Node1 -> Node15 [dir="back",color="steelblue1",style="solid"];
  Node15 [label="nlohmann::basic_json\l::get_impl_ptr",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$a01659.html#a1b392df4dc99d75751dcd542a8b745ec",tooltip="get a pointer to the value (object)"];
  Node15 -> Node16 [dir="back",color="steelblue1",style="solid"];
  Node16 [label="nlohmann::basic_json\l::get_ptr",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$a01659.html#a85222410e03d8f5c8ff9c78cf9f6b1b6",tooltip="get a pointer value (implicit)"];
  Node1 -> Node17 [dir="back",color="steelblue1",style="solid"];
  Node17 [label="nlohmann::basic_json\l::insert",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$a01659.html#a0181d03c6314bedcbad2e92d3676223c",tooltip="inserts elements"];
  Node1 -> Node18 [dir="back",color="steelblue1",style="solid"];
  Node18 [label="nlohmann::basic_json\l::is_structured",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$a01659.html#a4e05a7d5deec758f1d830741b68b4249",tooltip="return whether type is structured"];
  Node1 -> Node19 [dir="back",color="steelblue1",style="solid"];
  Node19 [label="nlohmann::basic_json\l::merge_patch",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$a01659.html#a844a77cb154752d12118f10af26d54cb",tooltip="applies a JSON Merge Patch"];
  Node19 -> Node19 [dir="back",color="steelblue1",style="solid"];
  Node1 -> Node20 [dir="back",color="steelblue1",style="solid"];
  Node20 [label="nlohmann::basic_json\l::operator[]",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$a01659.html#a3f45f3820c456ad2e3f3df2926564151",tooltip="access specified object element"];
  Node1 -> Node11 [dir="back",color="steelblue1",style="solid"];
  Node1 -> Node21 [dir="back",color="steelblue1",style="solid"];
  Node21 [label="nlohmann::basic_json\l::push_back",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$a01659.html#ad704839e6a5195e3b76f22e2b9aa63ee",tooltip="add an object to an object"];
  Node1 -> Node22 [dir="back",color="steelblue1",style="solid"];
  Node22 [label="nlohmann::basic_json\l::swap",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$a01659.html#a57b86bdcfc55557dacc36969adb0417e",tooltip="exchanges the values"];
  Node1 -> Node23 [dir="back",color="steelblue1",style="solid"];
  Node23 [label="nlohmann::basic_json\l::update",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$a01659.html#a377819905d567f6f523dcbc592cb6356",tooltip="updates a JSON object from another object, overwriting existing keys"];
  Node1 -> Node12 [dir="back",color="steelblue1",style="solid"];
}
