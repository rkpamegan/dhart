digraph "nlohmann::basic_json::erase"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="LR";
  Node1 [label="nlohmann::basic_json\l::erase",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="remove elements given an iterator range"];
  Node1 -> Node2 [color="steelblue1",style="solid"];
  Node2 [label="nlohmann::basic_json\l::assert_invariant",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$a01659.html#aa7e7b1bdb6e9dbcfa5e284e8a2fb6464",tooltip="checks the class invariants"];
  Node1 -> Node3 [color="steelblue1",style="solid"];
  Node3 [label="nlohmann::detail::invalid\l_iterator::create",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$a01567.html#a4e849260a3caa1b288c7e619130c6c09",tooltip=" "];
  Node3 -> Node4 [color="steelblue1",style="solid"];
  Node4 [label="nlohmann::detail::exception\l::name",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$a01559.html#abf41a7e9178356314082284e6cfea278",tooltip=" "];
  Node1 -> Node5 [color="steelblue1",style="solid"];
  Node5 [label="nlohmann::detail::type\l_error::create",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$a01571.html#aecc083aea4b698c33d042670ba50c10f",tooltip=" "];
  Node5 -> Node4 [color="steelblue1",style="solid"];
  Node1 -> Node6 [color="steelblue1",style="solid"];
  Node6 [label="nlohmann::basic_json::end",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$a01659.html#a931267ec3f09eb67e4382f321b2c52bc",tooltip="returns an iterator to one past the last element"];
  Node6 -> Node7 [color="steelblue1",style="solid"];
  Node7 [label="nlohmann::detail::iter\l_impl::set_end",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$a02011.html#a23e50ad4c13aa62d9ac7f60a123823ee",tooltip="set the iterator past the last value"];
  Node7 -> Node8 [color="steelblue1",style="solid"];
  Node8 [label="nlohmann::detail::primitive\l_iterator_t::set_end",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$a02003.html#ad26a823483846a12d890c3feed3097eb",tooltip="set iterator to a defined past the end"];
  Node1 -> Node9 [color="steelblue1",style="solid"];
  Node9 [label="nlohmann::basic_json\l::is_binary",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$a01659.html#a9576224f7b3ff812a308e7c1e784ea80",tooltip="return whether value is a binary array"];
  Node1 -> Node10 [color="steelblue1",style="solid"];
  Node10 [label="nlohmann::basic_json\l::is_string",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$a01659.html#ab303d17366c26fca12242c7f8def1bb7",tooltip="return whether value is a string"];
  Node1 -> Node11 [color="steelblue1",style="solid"];
  Node11 [label="nlohmann::basic_json\l::type_name",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$a01659.html#ab8811fc4eab6091b32b34b3ac3e90474",tooltip="return the type as string"];
}
